language: cpp

sudo: required
dist: xenial
services:
        - xvfb

branches:
    only:
        - master
        - development
        - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

matrix:
    include:
        - os: linux
          env: QT_BASE=48 COMPILER=g++-5.4 CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=48 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=551 COMPILER=g++-5.4 CMAKE_BUILD_TYPE=RelWithDebInfo

        - os: linux
          env: QT_BASE=551 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=5123 COMPILER=g++-5.4 CMAKE_BUILD_TYPE=RelWithDebInfo

        - os: linux
          env: QT_BASE=5123 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: osx
          env: CMAKE_BUILD_TYPE=RelWithDebInfo
          compiler: clang

before_install:
    - |
      export CHANGED_FILES=($(git diff --name-only ${TRAVIS_COMMIT_RANGE})) &&
      echo "Changed files: ${CHANGED_FILES}" &&
      export DETECTED_CHANGES_AFFECTING_BUILD=False &&
      for CHANGED_FILE in ${CHANGED_FILES}; do
        echo "Checking file ${CHANGED_FILE}" &&
        if ! [[ ${CHANGED_FILE} =~ "*.md" ]] && [[ "${CHANGED_FILE}" != "COPYING.LESSER" ]] && [[ "${CHANGED_FILE}" != "COPYING.txt" ]]; then
          echo "Detected changes affecting build: file ${CHANGED_FILE}" &&
          DETECTED_CHANGES_AFFECTING_BUILD=True &&
          break
        fi
      done
    - |
      if [[ ${DETECTED_CHANGES_AFFECTING_BUILD} == False ]]; then
        echo "No changes affecting build detected, exiting" &&
        travis_terminate 0 &&
        exit 1
      fi

install:
    - |
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        export DISPLAY=:99.0 &&
        wget http://www.cmake.org/files/v3.2/cmake-3.2.0-Linux-x86_64.tar.gz &&
        tar -xzf cmake-3.2.0-Linux-x86_64.tar.gz &&
        sudo cp -fR cmake-3.2.0-Linux-x86_64/* /usr &&
        sudo apt-get -qq install p7zip-full libxml2-dev libboost-dev libssl-dev libhunspell-dev coreutils curl &&
        sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test &&
        if [ "${QT_BASE}" = "551" ]; then
          echo "Building for Qt 5.5.1" &&
          sudo apt-get -qq install qtbase5-dev qttools5-dev qttools5-dev-tools libqt5webkit5-dev libqt5sql5-sqlite &&
          if [ "${COMPILER}" = "clang++" ]; then
            export CXX="clang++" &&
            export CC="clang"
          fi
        elif [ "${QT_BASE}" = "5123" ]; then
          echo "Building for Qt 5.12.3" &&
          sudo apt-add-repository -y ppa:beineri/opt-qt-5.12.3-xenial &&
          sudo apt-get -qq update &&
          sudo apt-get -qq install qt512tools qt512base qt512webchannel qt512webengine qt512websockets qt512xmlpatterns qt512translations mesa-common-dev libgl1-mesa-dev &&
          if [ "${COMPILER}" = "clang++" ]; then
            export CXX="clang++" &&
            export CC="clang"
          fi
        else
          echo "Building for Qt 4.8" &&
          sudo apt-get -qq update &&
          sudo apt-get -qq install libqt4-dev libqt4-dev-bin libqt4-network libqt4-xml libqt4-xmlpatterns libqt4-sql libqt4-sql-sqlite libqt4-test libqt4-dbus libqtwebkit-dev &&
          if [ "${COMPILER}" = "clang++" ]; then
            export CXX="clang++" &&
            export CC="clang"
          fi
        fi
      else
        brew update &&
        brew unlink cmake &&
        brew install cmake &&
        brew link cmake &&
        brew install qt5 &&
        chmod -R 755 /usr/local/opt/qt5/* &&
        brew install hunspell &&
        brew install p7zip
      fi
    - export LIBQUENTIER_DIR=$(pwd) &&
      echo "LIBQUENTIER_DIR = $LIBQUENTIER_DIR"
    - cmake --version
    - cd ..
    - |
      echo "Building qtkeychain" &&
      mkdir qtkeychain &&
      git clone https://github.com/frankosterfeld/qtkeychain.git qtkeychain &&
      cd qtkeychain &&
      git checkout v0.8.0 &&
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "5123" ];then
          source /opt/qt512/bin/qt512-env.sh &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt512 ..
        elif [ "${QT_BASE}" = "551" ]; then
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DBUILD_WITH_QT4=1 ..
        fi
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 ..
      fi
      make &&
      sudo make install &&
      cd ../..
    - echo "Building tidy-html5" &&
      mkdir tidy-html5 &&
      git clone https://github.com/htacg/tidy-html5.git tidy-html5 &&
      cd tidy-html5 &&
      git checkout 5.6.0 &&
      mkdir build-tidy &&
      cd build-tidy &&
      cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir .. &&
      make &&
      make install &&
      cd ../..
    - if [ "${QT_BASE}" = "48" ]; then
        echo "Building qt4-mimetypes" &&
        mkdir qt4-mimetypes &&
        git clone https://github.com/d1vanov/qt4-mimetypes.git qt4-mimetypes &&
        cd qt4-mimetypes &&
        mkdir build &&
        cd build &&
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir .. &&
        make &&
        make install &&
        cd ../..
        ;
      fi
    - |
      echo "Building QEverCloud" &&
      mkdir QEverCloud &&
      git clone https://github.com/d1vanov/QEverCloud.git QEverCloud &&
      cd QEverCloud &&
      if [ "${TRAVIS_BRANCH}" = "development" ]; then
        git checkout development
      fi
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "5123" ]; then
          source /opt/qt512/bin/qt512-env.sh &&
          export LD_LIBRARY_PATH=/opt/qt512/lib &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt512 ..
        elif [ "${QT_BASE}" = "551" ]; then
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DUSE_QT5_WEBKIT=1 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DBUILD_WITH_QT4=1 ..
        fi
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 ..
      fi
      make &&
      make check &&
      make install &&
      cd ../..

script:
    - |
      echo "Building libquentier" &&
      cd $LIBQUENTIER_DIR &&
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "5123" ]; then
          source /opt/qt512/bin/qt512-env.sh &&
          export LD_LIBRARY_PATH=/opt/qt512/lib &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=/opt/qt512 -DUSE_QT5=1 ..
        elif [ "${QT_BASE}" = "551" ]; then
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_QT5=1 -DUSE_QT5_WEBKIT=1 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQtKeychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/QtKeychain \
                -DQEverCloud-qt4_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt4 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -Dqt4-mimetypes_DIR=$(pwd)/../../qt4-mimetypes/build/installdir/lib/cmake/qt4-mimetypes \
                -DCMAKE_VERBOSE_MAKEFILE=ON ..
        fi
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/../../qtkeychain/build/installdir/lib &&
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/../../QEverCloud/build/installdir/lib &&
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/../../tidy-html5/build-tidy/installdir/lib &&
        if [ "${QT_BASE}" = "48" ]; then
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/../../qt4-mimetypes/build/installdir/lib
        fi
        echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH"
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
              -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 \
              -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl \
              -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/cmake/Qt5Keychain \
              -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
              -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
              -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.dylib \
              -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_QT5=1 ..
      fi
      make &&
      make check &&
      make lupdate &&
      make lrelease &&
      make install
    - |
      if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${QT_BASE}" = "592" ] && [ "${COMPILER}" = "g++-4.8" ] && [ "${TRAVIS_BRANCH}" = "development" ]; then
        echo "Triggering build at OpenSUSE build service for development branch" &&
        curl -X POST -H "Authorization: Token $OSC_TOKEN" https://api.opensuse.org/trigger/runservice?project=home%3Ad1vanov%3Aquentier-development&package=libquentier-development
      fi

after_success:
    - |
      if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${QT_BASE}" = "5123" ] && [ "${COMPILER}" = "g++-5.4" ]; then
        if [ "${TRAVIS_BRANCH}" = "master" ] || [ "${TRAVIS_BRANCH}" = "development" ]; then
          cd $LIBQUENTIER_DIR/build/installdir &&
          7z a libquentier_linux_qt_${QT_BASE}_x86_64.zip * &&
          wget https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_linux.zip &&
          unzip ciuploadtool_linux.zip &&
          chmod 755 ciuploadtool &&
          ./ciuploadtool -suffix="$TRAVIS_BRANCH" libquentier_linux_qt_${QT_BASE}_x86_64.zip
        fi
      elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        if [ "${TRAVIS_BRANCH}" = "master" ] || [ "${TRAVIS_BRANCH}" = "development" ]; then
          cd $LIBQUENTIER_DIR/build/installdir &&
          7z a libquentier_mac_x86_64.zip * &&
          wget https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_mac.zip &&
          unzip ciuploadtool_mac.zip &&
          chmod 755 ciuploadtool &&
          ./ciuploadtool -suffix="$TRAVIS_BRANCH" libquentier_mac_x86_64.zip
        fi
      fi
