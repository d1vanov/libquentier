version: '0.5.0-{build}'

branches:
  only:
    - master
    - development
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

skip_commits:
  files:
    - '*.md'
    - COPYING.LESSER
    - COPYING.txt

environment:
  auth_token:
    secure: rLuHhO0prerqoGCYmfOoyxqcwwamCXtuZtl4Jzqeu3aGgflk0mnX1fogLq68YcRW
  matrix:
    - prepare_mode: YES
      name: win32-prepare
      platform: amd64_x86
      qt: msvc2015
    - prepare_mode: NO
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      name: win32
      platform: amd64_x86
      qt: msvc2015
    - prepare_mode: NO
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      name: win64
      platform: amd64
      qt: msvc2017_64
    - prepare_mode: NO
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      name: win32
      platform: mingw
      qt: mingw492_32

clone_folder: c:\dev\libquentier

init:
  - if not %platform%==mingw set PATH=C:\Qt\5.10\%qt%\bin;%PATH%
  - if %platform%==mingw set PATH=C:\Qt\5.5\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if %qt%==msvc2017_64 set tool=VS2017_x64
  - if %qt%==msvc2015 set tool=VS2015_x86
  - if %platform%==mingw set tool=MinGW_x86
  - if %platform%==mingw set DEPLOYMENT_TARGET=libquentier-windows-qt55-%tool%.zip
  - if not %platform%==mingw set DEPLOYMENT_TARGET=libquentier-windows-qt510-%tool%.zip
  - if %platform%==amd64 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %platform%==amd64_x86 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %platform%
  - if not %platform%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")
  - if %platform%==mingw (set use_webkit=1) else (set use_webkit=0)
  - if %platform%==mingw set PATH=C:\MinGW\bin;C:\Program Files (x86)\CMake\bin;%PATH%
  - if %qt%==msvc2017_64 set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin";%PATH%
  - if %qt%==msvc2015 set PATH="C:\Program Files (x86)\MSBuild\14.0\Bin";%PATH%
  
install:
  - echo "Downloading ciuploadtool"
  - md c:\dev\ciuploadtool
  - cd c:\dev\ciuploadtool
  - curl -fsSL https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_windows_x86.zip -o ciuploadtool_windows_x86.zip
  - 7z x ciuploadtool_windows_x86.zip
  - if %prepare_mode%==YES c:\dev\ciuploadtool\ciuploadtool.exe -preponly -suffix="%APPVEYOR_REPO_BRANCH%"
  - ps: if ($env:prepare_mode -eq "YES") { throw "Failing in order to stop the current build matrix job early" }
# libiconv
  - echo "Downloading libiconv"
  - md c:\dev\libiconv
  - cd c:\dev\libiconv
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libiconv-1.15-msvc2015_x86.zip -o libiconv-1.15-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x libiconv-1.15-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libiconv-1.15-msvc2017_x64.zip -o libiconv-1.15-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x libiconv-1.15-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libiconv-1.15-mingw530_x86.zip -o libiconv-1.15-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x libiconv-1.15-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# zlib
  - echo "Downloading zlib"
  - md c:\dev\zlib
  - cd c:\dev\zlib
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/zlib-1.2.11-msvc2015_x86.zip -o zlib-1.2.11-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x zlib-1.2.11-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/zlib-1.2.11-msvc2017_x64.zip -o zlib-1.2.11-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x zlib-1.2.11-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/zlib-1.2.11-mingw530_x86.zip -o zlib-1.2.11-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x zlib-1.2.11-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# libxml2
  - echo "Downloading libxml2"
  - md c:\dev\libxml2
  - cd c:\dev\libxml2
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libxml2-2.9.7-msvc2015_x86.zip -o libxml2-2.9.7-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x libxml2-2.9.7-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libxml2-2.9.7-msvc2017_x64.zip -o libxml2-2.9.7-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x libxml2-2.9.7-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libxml2-2.9.7-mingw530_x86.zip -o libxml2-2.9.7-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x libxml2-2.9.7-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# libhunspell
  - echo "Downloading libhunspell"
  - md c:\dev\libhunspell
  - cd c:\dev\libhunspell
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libhunspell-1.7.0-msvc2015_x86.zip -o libhunspell-1.7.0-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x libhunspell-1.7.0-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libhunspell-1.7.0-msvc2017_x64.zip -o libhunspell-1.7.0-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x libhunspell-1.7.0-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/libhunspell-1.6.2-mingw530_x86.zip -o libhunspell-1.6.2-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x libhunspell-1.6.2-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# tidy-html5
  - echo "Downloading tidy-html5"
  - md c:\dev\tidy-html5
  - cd c:\dev\tidy-html5
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/tidy-html5-5.6.0-msvc2015_x86.zip -o tidy-html5-5.6.0-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x tidy-html5-5.6.0-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/tidy-html5-5.6.0-msvc2017_x64.zip -o tidy-html5-5.6.0-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x tidy-html5-5.6.0-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/tidy-html5-5.6.0-mingw530_x86.zip -o tidy-html5-5.6.0-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x tidy-html5-5.6.0-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# Boost
  - echo "Downloading boost"
  - md c:\dev\boost
  - cd c:\dev\boost
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/boost-1_65_0-msvc2015_x86.zip -o boost-1_65_0-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x boost-1_65_0-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/boost-1_65_0-msvc2017_x64.zip -o boost-1_65_0-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x boost-1_65_0-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/boost-1_65_0-mingw530_x86.zip -o boost-1_65_0-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x boost-1_65_0-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set BOOST_ROOT=%cd%
# OpenSSL
  - echo "Downloading OpenSSL"
  - md c:\dev\openssl
  - cd c:\dev\openssl
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/openssl-1_0_2r-msvc2015_x86.zip -o openssl-1_0_2r-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x openssl-1_0_2r-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/openssl-1_0_2r-msvc2017_x64.zip -o openssl-1_0_2r-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x openssl-1_0_2r-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/openssl-1_0_2r-mingw530_x86.zip -o openssl-1_0_2r-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x openssl-1_0_2r-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set OPENSSL_ROOT_DIR=%cd%
# Qtkeychain
  - echo "Downloading qtkeychain"
  - md c:\dev\qtkeychain
  - cd c:\dev\qtkeychain
  - if %qt%==msvc2015 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/qtkeychain-0.9.1-msvc2015_x86.zip -o qtkeychain-0.9.1-msvc2015_x86.zip
  - if %qt%==msvc2015 7z x qtkeychain-0.9.1-msvc2015_x86.zip
  - if %qt%==msvc2017_64 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/qtkeychain-0.9.1-msvc2017_x64.zip -o qtkeychain-0.9.1-msvc2017_x64.zip
  - if %qt%==msvc2017_64 7z x qtkeychain-0.9.1-msvc2017_x64.zip
  - if %qt%==mingw492_32 curl -fsSL https://github.com/d1vanov/quentier-dependencies-windows/releases/download/continuous/qtkeychain-0.9.1-mingw530_x86.zip -o qtkeychain-0.9.1-mingw530_x86.zip
  - if %qt%==mingw492_32 7z x qtkeychain-0.9.1-mingw530_x86.zip
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
# QEverCloud
  - echo "Downloading QEverCloud"
  - md c:\dev\qevercloud
  - cd c:\dev\qevercloud
# First try to download the prebuilt binary to save the precious time as well as CPU cycles
  - md build\installdir
  - cd build\installdir
  - set QEVERCLOUD_DOWNLOADED=0
  - if %qt%==msvc2015 if "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-development/qevercloud-windows-qt510-VS2015_x86.zip -o qevercloud-windows-qt510-VS2015_x86.zip & set errorlevel=0
  - if %qt%==msvc2015 if not "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-master/qevercloud-windows-qt510-VS2015_x86.zip -o qevercloud-windows-qt510-VS2015_x86.zip & set errorlevel=0
  - if %qt%==msvc2017_64 if "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-development/qevercloud-windows-qt510-VS2017_x64.zip -o qevercloud-windows-qt510-VS2017_x64.zip & set errorlevel=0
  - if %qt%==msvc2017_64 if not "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-master/qevercloud-windows-qt510-VS2017_x64.zip -o qevercloud-windows-qt510-VS2017_x64.zip & set errorlevel=0
  - if %qt%==mingw492_32 if "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-development/qevercloud-windows-qt55-MinGW_x86.zip -o qevercloud-windows-qt55-MinGW_x86.zip & set errorlevel=0
  - if %qt%==mingw492_32 if not "%APPVEYOR_REPO_BRANCH%" == "development" curl -fsSL https://github.com/d1vanov/QEverCloud/releases/download/continuous-master/qevercloud-windows-qt55-MinGW_x86.zip -o qevercloud-windows-qt55-MinGW_x86.zip & set errorlevel=0
  - if %qt%==msvc2015 if exist qevercloud-windows-qt510-VS2015_x86.zip set QEVERCLOUD_DOWNLOADED=1
  - if %qt%==msvc2017_64 if exist qevercloud-windows-qt510-VS2017_x64.zip set QEVERCLOUD_DOWNLOADED=1
  - if %qt%==mingw492_32 if exist qevercloud-windows-qt55-MinGW_x86.zip set QEVERCLOUD_DOWNLOADED=1
  - if %qt%==msvc2015 if %QEVERCLOUD_DOWNLOADED%==1 7z x qevercloud-windows-qt510-VS2015_x86.zip
  - if %qt%==msvc2017_64 if %QEVERCLOUD_DOWNLOADED%==1 7z x qevercloud-windows-qt510-VS2017_x64.zip
  - if %qt%==mingw492_32 if %QEVERCLOUD_DOWNLOADED%==1 7z x qevercloud-windows-qt55-MinGW_x86.zip
  - if %QEVERCLOUD_DOWNLOADED%==1 set PATH=%cd%\bin;%PATH%
  - if %QEVERCLOUD_DOWNLOADED%==1 set LIB=%cd%\lib;%LIB%
  - if %QEVERCLOUD_DOWNLOADED%==1 set INCLUDE=%cd%\lib;%INCLUDE%
# In case of failure clone the QEverCloud repo and build the library from sources
  - if not %QEVERCLOUD_DOWNLOADED%==1 cd c:\dev
  - if not %QEVERCLOUD_DOWNLOADED%==1 rd /s /q qevercloud
  - if not %QEVERCLOUD_DOWNLOADED%==1 git clone https://github.com/d1vanov/QEverCloud.git qevercloud
  - if not %QEVERCLOUD_DOWNLOADED%==1 cd c:\dev\qevercloud
  - if not %QEVERCLOUD_DOWNLOADED%==1 echo "Building QEverCloud"
  - if not %QEVERCLOUD_DOWNLOADED%==1 if "%APPVEYOR_REPO_BRANCH%" == "development" git checkout development
  - if not %QEVERCLOUD_DOWNLOADED%==1 md build
  - if not %QEVERCLOUD_DOWNLOADED%==1 cd build
  - if not %QEVERCLOUD_DOWNLOADED%==1 if %qt%==mingw492_32 set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %QEVERCLOUD_DOWNLOADED%==1 if %qt%==mingw492_32 set PATH=C:\MinGW\bin;C:\Qt\5.5\%qt%\bin;%PATH%
  - if not %QEVERCLOUD_DOWNLOADED%==1 if not %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:\dev\qevercloud\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.10/%qt%
  - if not %QEVERCLOUD_DOWNLOADED%==1 if %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:\dev\qevercloud\build\installdir" -DUSE_QT5_WEBKIT=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%
  - if not %QEVERCLOUD_DOWNLOADED%==1 cmake --build . --target all
  - if not %QEVERCLOUD_DOWNLOADED%==1 cmake --build . --target check
  - if not %QEVERCLOUD_DOWNLOADED%==1 cmake --build . --target install
  - if not %QEVERCLOUD_DOWNLOADED%==1 if %qt%==mingw492_32 set PATH=%PATH%;C:\Program Files\Git\usr\bin
  - if not %QEVERCLOUD_DOWNLOADED%==1 set PATH=%PATH%;%cd%\installdir\bin
  - if not %QEVERCLOUD_DOWNLOADED%==1 set LIB=%LIB%;%cd%\installdir\lib
  - if not %QEVERCLOUD_DOWNLOADED%==1 set INCLUDE=%INCLUDE%;%cd%\installdir\include
  - cd c:\dev

before_build:
  - cd c:\dev\libquentier
  - md build

build_script:
  - cd c:\dev\libquentier\build
  - if %qt%==mingw492_32 set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if %qt%==mingw492_32 set PATH=C:\MinGW\bin;C:\Qt\5.5\%qt%\bin;%PATH%
  - if not %qt%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/libquentier && echo 'install(FILES $<TARGET_PDB_FILE:${LIBNAME}> DESTINATION bin OPTIONAL)' >> CMakeLists.txt"
  - if %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:/dev/libquentier/build/installdir" -DUSE_QT5=1 -DUSE_QT5_WEBKIT=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%" -DOPENSSL_ROOT_DIR="c:/dev/openssl" -DBOOST_ROOT="c:/dev/boost"
  - if not %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:/dev/libquentier/build/installdir" -DUSE_QT5=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.10/%qt%" -DOPENSSL_ROOT_DIR="c:/dev/openssl" -DBOOST_ROOT="c:/dev/boost"
  - cmake --build . --target all
  - cmake --build . --target check
  - cmake --build . --target lupdate
  - cmake --build . --target lrelease
  - cmake --build . --target install
  - if %qt%==mingw492_32 set PATH=%ORIGPATH%

test_script:
  - if not %qt%==mingw492_32 if exist %LOCALAPPDATA%\CrashDumps mkdir C:\symbols & set PATH="C:\Program Files (x86)\Windows Kits\10\Debuggers\x86";"C:\Program Files (x86)\Windows Kits\10\Debuggers\x64";%PATH% & set SYMBOLSPATH="C:\dev\libquentier\build;SRV*C:\symbols*http://msdl.microsoft.com/download/symbols"
  - if not %qt%==mingw492_32 if exist %LOCALAPPDATA%\CrashDumps for %%f in (%LOCALAPPDATA%\CrashDumps\*) do cdb -lines -x -y %SYMBOLSPATH% -c "|;!peb;.kframes 100;g;~* kP;!analyze -vp;.excr;!gle -all;.dump /ma C:\dev\libquentier\build\test_libquentier.dmp;q" -z "%%f"
  - if not %qt%==mingw492_32 if exist C:\dev\libquentier\build\test_libquentier.dmp 7z a crash_dump.7z C:\dev\libquentier\build\test_libquentier.dmp
  - if not %qt%==mingw492_32 if exist crash_dump.7z appveyor PushArtifact crash_dump.7z
  - ps: if (Test-Path C:\dev\libquentier\build\crash_dump.7z -PathType Leaf) { throw "Test crashed" }

after_build:
  - cd c:\dev\libquentier\build\installdir
  - 7z a %DEPLOYMENT_TARGET% *
  - cp %DEPLOYMENT_TARGET% %APPVEYOR_BUILD_FOLDER%
  - cd %APPVEYOR_BUILD_FOLDER%
  - c:\dev\ciuploadtool\ciuploadtool.exe -suffix="%APPVEYOR_REPO_BRANCH%" %DEPLOYMENT_TARGET%

artifacts:
  - path: '*.zip'
    name: archive

matrix:
  allow_failures:
    - prepare_mode: YES
  fast_finish: true
