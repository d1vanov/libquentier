version: '0.4.0-{build}'

branches:
  only:
    - feature/Issue-37-integrate-AppVeyor-CI

environment:
  matrix:
      #    - name: win32
      #      platform: amd64_x86
      #      qt: msvc2015
      #    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      #      name: win64
      #      platform: amd64
      #      qt: msvc2017_64
    - name: win32
      platform: mingw
      qt: mingw492_32

clone_folder: c:\dev\libquentier

init:
  - echo "Platform = %platform%, name = %name%, qt = %qt%"
  - if %platform%==amd64 echo "Building with Visual Studio 2017"
  - if %platform%==amd64_x86 echo "Building with Visual Studio 2015"
  - if %platform%==mingw echo "Building with MinGW"
  - if not %platform%==mingw set PATH=C:\Qt\5.9.2\%qt%\bin;%PATH%
  - if %platform%==mingw set PATH=C:\Qt\5.5\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if %platform%==mingw set DEPLOYMENT_TARGET=libquentier-qt55-%qt%-%APPVEYOR_BUILD_VERSION%_%APPVEYOR_REPO_COMMIT:~0,7%.zip
  - if not %platform%==mingw set DEPLOYMENT_TARGET=libquentier-qt55-%qt%-%APPVEYOR_BUILD_VERSION%_%APPVEYOR_REPO_COMMIT:~0,7%.zip
  - if %platform%==amd64 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %platform%==amd64_x86 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %platform%
  - if not %platform%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")
  - if %platform%==mingw (set use_webkit=1) else (set use_webkit=0)
  - if %platform%==mingw set PATH=C:\MinGW\bin;C:\Program Files (x86)\CMake\bin;%PATH%
  - if not %name%==win64 set OPENSSL_ROOT_DIR=C:\OpenSSL-Win32 else set OPENSSL_ROOT_DIR=C:\OpenSSL-Win64
  - if not %qt%==msvc2017_64 set BOOST_ROOT=C:\Libraries\boost_1_63_0
  - if %qt%==msvc2017_64 set BOOST_ROOT=C:\Libraries\boost_1_65_1
  - if %qt%==msvc2017_64 set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin";%PATH%
  - if %qt%==msvc2015 set PATH="C:\Program Files (x86)\MSBuild\14.0\Bin";%PATH%
  
install:
  - echo "Platform = %platform%, qt = %qt%, name = %name%"
  - echo "Downloading libiconv"
  - md c:\dev\libiconv-win-build
  - cd c:\dev
  - if not %qt%==mingw492_32 git clone https://github.com/kiyolee/libiconv-win-build.git libiconv-win-build
  - if not %qt%==mingw492_32 echo "Building libiconv"
  - if not %qt%==mingw492_32 cd libiconv-win-build
  - if %qt%==msvc2015 cd build-VS2015
  - if %qt%==msvc2015 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %qt%==msvc2017_64 cd build-VS2017
  - if %qt%==msvc2017_64 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %qt%==mingw492_32 md installdir
  - if not %qt%==mingw492_32 md installdir\bin
  - if not %qt%==mingw492_32 md installdir\lib
  - if %qt%==msvc2015 copy Release\libiconv.dll installdir\bin\libiconv.dll
  - if %qt%==msvc2015 copy Release\libiconv.lib installdir\lib\libiconv.lib
  - if %qt%==msvc2017_64 copy x64\Release\libiconv.dll installdir\bin\libiconv.dll
  - if %qt%==msvc2017_64 copy x64\Release\libiconv.lib installdir\bin\libiconv.lib
  - if not %qt%==mingw492_32 set PATH=%cd%\installdir\bin;%PATH%
  - if not %qt%==mingw492_32 set LIB=%cd%\installdir\lib;%LIB%
  - if not %qt%==mingw492_32 set INCLUDE=%cd%\..\include;%INCLUDE%
  - if %qt%==mingw492_32 cd libiconv-win-build
  - if %qt%==mingw492_32 curl -fsSL ftp://ftp.zlatkovic.com/libxml/64bit/iconv-1.14-win32-x86.7z -o iconv-1.14-win32-x86.7z
  - if %qt%==mingw492_32 7z x iconv-1.14-win32-x86.7z
  - if %qt%==mingw492_32 set PATH=%cd%\bin;%PATH%
  - if %qt%==mingw492_32 set LIB=%cd%\lib;%LIB%
  - if %qt%==mingw492_32 set INCLUDE=%cd%\include;%INCLUDE%
  - echo "Downloading zlib"
  - md c:\dev\zlib-win-build
  - cd c:\dev
  - if not %qt%==mingw492_32 git clone https://github.com/kiyolee/zlib-win-build.git zlib-win-build
  - if not %qt%==mingw492_32 echo "Building zlib"
  - if not %qt%==mingw492_32 cd zlib-win-build
  - if %qt%==msvc2015 cd build-VS2015
  - if %qt%==msvc2015 msbuild zlib.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %qt%==msvc2017_64 cd build-VS2017
  - if %qt%==msvc2017_64 msbuild zlib.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %qt%==mingw492_32 md installdir
  - if not %qt%==mingw492_32 md installdir\bin
  - if not %qt%==mingw492_32 md installdir\lib
  - if %qt%==msvc2015 copy Release\libz.dll installdir\bin\libz.dll
  - if %qt%==msvc2015 copy Release\libz.lib installdir\lib\libz.lib
  - if %qt%==msvc2017_64 copy x64\Release\libz.dll installdir\bin\libz.dll
  - if %qt%==msvc2017_64 copy x64\Release\libz.lib installdir\lib\libz.lib
  - if not %qt%==mingw492_32 set ZLIB_LIBRARIES=%cd%\installdir\lib\libz.lib
  - if not %qt%==mingw492_32 set ZLIB_INCLUDE_DIRS=%cd%\..
  - if not %qt%==mingw492_32 set PATH=%cd%\installdir\bin;%PATH%
  - if not %qt%==mingw492_32 set LIB=%cd%\installdir\lib;%LIB%
  - if not %qt%==mingw492_32 set INCLUDE=%cd%\..;%INCLUDE%
  - if %qt%==mingw492_32 cd zlib-win-build
  - if %qt%==mingw492_32 curl -fsSL ftp://ftp.zlatkovic.com/libxml/64bit/zlib-1.2.8-win32-x86.7z -o zlib-1.2.8-win32-x86.7z
  - if %qt%==mingw492_32 7z x zlib-1.2.8-win32-x86.7z
  - if %qt%==mingw492_32 set ZLIB_INCLUDE_DIRS=%cd%\include
  - if %qt%==mingw492_32 set ZLIB_LIBRARIES=%cd%\bin\zlib.dll
  - if %qt%==mingw492_32 set PATH=%cd%\bin;%PATH%
  - if %qt%==mingw492_32 set LIB=%cd%\lib;%LIB%
  - if %qt%==mingw492_32 set INCLUDE=%cd%\include;%INCLUDE%
  - echo "Downloading libxml2"
  - md c:\dev\libxml2-win-build
  - cd c:\dev
  - if not %qt%==mingw492_32 git clone https://github.com/kiyolee/libxml2-win-build.git libxml2-win-build
  - if not %qt%==mingw492_32 echo "Building libxml2"
  - if not %qt%==mingw492_32 cd libxml2-win-build
  - if %qt%==msvc2015 cd build-VS2015
  - if %qt%==msvc2015 msbuild libxml2.sln /p:Configuration="Release" /p:Platform="x86" /clp:ErrorsOnly
  - if %qt%==msvc2017_64 cd build-VS2017
  - if %qt%==msvc2017_64 msbuild libxml2.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %qt%==mingw492_32 md installdir
  - if not %qt%==mingw492_32 md installdir\bin
  - if not %qt%==mingw492_32 md installdir\lib
  - if %qt%==msvc2015 copy Release\libxml2.dll installdir\bin\libxml2.dll
  - if %qt%==msvc2015 copy Release\libxml2.lib installdir\lib\libxml2.lib
  - if %qt%==msvc2017_64 copy x64\Release\libxml2.dll installdir\bin\libxml2.dll
  - if %qt%==msvc2017_64 copy x64\Release\libxml2.lib installdir\lib\libxml2.lib
  - if not %qt%==mingw492_32 set LIBXML2_LIBRARIES=%cd%\installdir\lib\libxml2.lib
  - if not %qt%==mingw492_32 set LIBXML2_INCLUDE_DIR=%cd%\..\include
  - if not %qt%==mingw492_32 set PATH=%cd%\installdir\bin;%PATH%
  - if not %qt%==mingw492_32 set LIB=%cd%\installdir\lib;%LIB%
  - if not %qt%==mingw492_32 set INCLUDE=%cd%\..\include;%INCLUDE%
  - if %qt%==mingw492_32 cd libxml2-win-build
  - if %qt%==mingw492_32 curl -fsSL ftp://ftp.zlatkovic.com/libxml/64bit/libxml2-2.9.3-win32-x86.7z -o libxml2-2.9.3-win32-x86.7z
  - if %qt%==mingw492_32 7z x libxml2-2.9.3-win32-x86.7z
  - if %qt%==mingw492_32 set LIBXML2_INCLUDE_DIRS=%cd%\include
  - if %qt%==mingw492_32 set LIBXML2_LIBRARIES=%cd%\bin\libxml2.dll
  - if %qt%==mingw492_32 set PATH=%cd%\bin;%PATH%
  - if %qt%==mingw492_32 set LIB=%cd%\lib;%LIB%
  - if %qt%==mingw492_32 set INCLUDE=%cd%\include;%INCLUDE%
  - echo "Downloading hunspell"
  - md c:\dev\hunspell
  - cd c:\dev
  - git clone https://github.com/hunspell/hunspell.git hunspell
  - cd c:\dev\hunspell
  - git checkout v1.6.2
  - if not %qt%==mingw492_32 set INCLUDE=%INCLUDE%;%cd%\src
  - echo "Building hunspell, platform = %platform%, qt = %qt%, name = %name%"
  - if %qt%==msvc2015 MSBuild %cd%\msvc\Hunspell.sln /p:Configuration="Release_dll" /p:Platform="Win32" /clp:ErrorsOnly
  - if %qt%==msvc2017_64 MSBuild %cd%\msvc\Hunspell.sln /p:Configuration="Release_dll" /p:Platform="x64" /clp:ErrorsOnly
  - if %qt%==msvc2015 set PATH=%PATH%;%cd%\msvc\Release_dll\libhunspell
  - if %qt%==msvc2015 set LIB=%LIB%;%cd%\msvc\Release_dll\libhunspell
  - if %qt%==msvc2017_64 set PATH=%PATH%;%cd%\msvc\x64\Release_dll
  - if %qt%==msvc2017_64 set LIB=%LIB%;%cd%\msvc\x64\Release_dll
  - if %qt%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/hunspell && autoreconf -i && sed -i -e s/\ \|\ S_IRWXG\ \|\ S_IRWXO//g src/tools/hzip.cxx && CC=C:/MinGW/bin/gcc CXX=C:/MinGW/bin/g++ ./configure --prefix=$(pwd)/installdir --host=i386-unknown-mingw32 && make && make check && make install"
  - if %qt%==mingw492_32 set PATH=C:\dev\hunspell\installdir\bin;%PATH%
  - if %qt%==mingw492_32 set LIB=C:\dev\hunspell\installdir\lib;%LIB%
  - if %qt%==mingw492_32 set INCLUDE=C:\dev\hunspell\installdir\include;%INCLUDE%
  - echo "Downloading qtkeychain"
  - md c:\dev\qtkeychain
  - cd c:\dev
  - git clone https://github.com/frankosterfeld/qtkeychain.git qtkeychain
  - echo "Building qtkeychain"
  - cd c:\dev\qtkeychain
  - git checkout v0.8.0
  - if %qt%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && sed -i s/SecureZeroMemory/ZeroMemory/g keychain_win.cpp"
  - if %qt%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && sed -i -e 's/\!USE_CREDENTIAL_STORE/NOT USE_CREDENTIAL_STORE/g' CMakeLists.txt"
  - md build
  - cd build
  - if %qt%==mingw492_32 set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.9.2/%qt%
  - if %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CREDENTIAL_STORE=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%
  - cmake --build . --target all
  - cmake --build . --target install
  - if %qt%==mingw492_32 set PATH=%PATH%;C:\Program Files\Git\usr\bin
  - set PATH=%PATH%;%cd%\installdir\bin
  - set LIB=%LIB%;%cd%\installdir\lib
  - set INCLUDE=%INCLUDE%;%cd%\installdir\include
  - echo "Downloading QEverCloud"
  - md c:\dev\qevercloud
  - cd c:\dev
  - git clone https://github.com/d1vanov/QEverCloud.git qevercloud
  - echo "Building QEverCloud"
  - cd c:\dev\qevercloud
  - if %APPVEYOR_REPO_BRANCH%=="development" git checkout development
  - md build
  - cd build
  - if %qt%==mingw492_32 set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if %qt%==mingw492_32 set PATH=C:\MinGW\bin;C:\Qt\5.5\%qt%\bin;%PATH%
  - if %qt%==mingw492_32 echo "Path after ensuring Qt libs and MinGW runtime libs are in position"
  - if %qt%==mingw492_32 echo %PATH%
  - if not %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:\dev\qevercloud\build\installdir" -DUSE_QT5=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.9.2/%qt%
  - if %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:\dev\qevercloud\build\installdir" -DUSE_QT5=1 -DUSE_QT5_WEBKIT=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%
  - cmake --build . --target all
  - cmake --build . --target check
  - cmake --build . --target install
  - if %qt%==mingw492_32 set PATH=%PATH%;C:\Program Files\Git\usr\bin
  - set PATH=%PATH%;%cd%\installdir\bin
  - set LIB=%LIB%;%cd%\installdir\lib
  - set INCLUDE=%INCLUDE%;%cd%\installdir\include
  - echo "Downloading tidy-html5"
  - md c:\dev\tidy-html5
  - cd c:\dev
  - git clone https://github.com/htacg/tidy-html5.git tidy-html5
  - echo "Building tidy-html5"
  - cd tidy-html5
  - git checkout 5.6.0
  - md build-tidy
  - cd build-tidy
  - if %qt%==mingw492_32 set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIB=ON -DCMAKE_INSTALL_PREFIX="c:\dev\tidy-html5\build-tidy\installdir"
  - cmake --build . --target all
  - cmake --build . --target install
  - set PATH=%PATH%;%cd%\installdir\bin
  - set LIB=%LIB%;%cd%\installdir\lib
  - set INCLUDE=%INCLUDE%;%cd%\installdir\include
  - cd c:\dev

before_build:
  - cd c:\dev\libquentier
  - md build

build_script:
  - cd c:\dev\libquentier\build
  - echo "PATH = %PATH%, LIB = %LIB%, INCLUDE = %INCLUDE%"
  - if not %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="c:/dev/install" -DUSE_QT5=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.9.2/%qt%"
  - if %qt%==mingw492_32 cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX="c:/dev/install" -DUSE_QT5=1 -DUSE_QT5_WEBKIT=1 -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%"
  - cmake --build . --target all
  - cmake --build . --target check
  - cmake --build . --target install
  - if %qt%==mingw492_32 set PATH=%ORIGPATH%

after_build:
  - cd c:\dev
  - 7z a %DEPLOYMENT_TARGET% c:\dev\install\*
  - cp %DEPLOYMENT_TARGET% %APPVEYOR_BUILD_FOLDER%

artifacts:
  - path: '*.zip'
    name: archive

deploy:
  - provider: GitHub
    artifact: archive
    draft: false
    prerelease: false
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only

matrix:
  fast_finish: true
