# - Try to find libquentier
# Once done this will define
#  LIBQUENTIER_FOUND - libquentier library was found
#  LIBQUENTIER_INCLUDE_DIRS - libquentier include directories
#  LIBQUENTIER_LIBRARIES - The libraries needed to use libquentier
#  LIBQUENTIER_HAS_AUTHENTICATION_MANAGER - Boolean set to true if libquentier was built with AuthenticationManager
#  LIBQUENTIER_USE_QT_WEB_ENGINE - Boolean set to true if libquentier uses QtWebEngine
#  LIBQUENTIER_HAS_NOTE_EDITOR - Boolean set to true if libquentier was built with NoteEditor

# Compute paths
if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/CMakeCache.txt")
  # in build tree
  include("${CMAKE_CURRENT_LIST_DIR}/Libquentier-@LIBQUENTIER_QT_VERSION@BuildTreeSettings.cmake")
else()
  function(_libquentier_find_prefix_dir _libquentier_prefix_dir)
    set(current_dir "${CMAKE_CURRENT_LIST_DIR}")
    set(parent_dir "")
    while(1)
      get_filename_component(parent_dir ${current_dir} DIRECTORY)
      if ("${parent_dir}" STREQUAL "${current_dir}")
        break()
      endif()

      set(parent_dir_len "0")
      string(LENGTH "${parent_dir}" parent_dir_len)
      if ("${parent_dir_len}" STREQUAL "0")
        break()
      endif()

      if(EXISTS "${parent_dir}/@CMAKE_INSTALL_INCLUDEDIR@/quentier/utility/ApplicationSettings.h")
        set(_libquentier_prefix_dir "${parent_dir}" PARENT_SCOPE)
        return()
      endif()

      set(current_dir "${parent_dir}")
    endwhile()
  endfunction()

  set(_libquentier_prefix_dir "")
  _libquentier_find_prefix_dir(_libquentier_prefix_dir)

  if(_libquentier_prefix_dir)
    set(LIBQUENTIER_INCLUDE_DIRS "${_libquentier_prefix_dir}/@CMAKE_INSTALL_INCLUDEDIR@")
  else()
    message(FATAL_ERROR "Failed to find libquentier prefix dir")
  endif()
endif()

# Find the libquentier's Qt dependencies
include("${CMAKE_CURRENT_LIST_DIR}/LibquentierFindPackageWrapperMacro.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/Libquentier-@LIBQUENTIER_QT_VERSION@FindQtDependencies.cmake")

# libquentier library dependencies (contains definitions for IMPORTED targets)
include("${CMAKE_CURRENT_LIST_DIR}/Libquentier-@LIBQUENTIER_QT_VERSION@LibraryDepends.cmake")

# find libquentier library dependencies being IMPORTED targets
include("${CMAKE_CURRENT_LIST_DIR}/Libquentier-@LIBQUENTIER_QT_VERSION@FindOtherDependencies.cmake")

# The following libraries are found via ad-hoc processing and don't have find_package scripts, processing them specifically
include("${CMAKE_CURRENT_LIST_DIR}/LibquentierFindHunspell.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/LibquentierFindTidyHtml5.cmake")

# These are IMPORTED targets created by Libquentier-@LIBQUENTIER_QT_VERSION@LibraryDepends.cmake
set(LIBQUENTIER_LIBRARIES "lib@LIBQUENTIER_QT_VERSION@quentier@LIBQUENTIER_LIBNAME_SUFFIX@")

@LIB_QUENTIER_HAS_AUTHENTICATION_MANAGER_OPTION@
@LIB_QUENTIER_USE_QT_WEB_ENGINE_OPTION@
@LIB_QUENTIER_HAS_NOTE_EDITOR_OPTION@
set(LIBQUENTIER_FOUND TRUE)
