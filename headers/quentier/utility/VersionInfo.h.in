/*
 * Copyright 2017-2024 Dmitry Ivanov
 *
 * This file is part of libquentier
 *
 * libquentier is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 *
 * libquentier is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with libquentier. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <quentier/utility/Linkage.h>
#include <QString>

/**
 * This file contains automatically generated code including macro definitions
 * and functions which determine configuration-specific properties of
 * libquentier
 */

/**
 * This macro is set to true if libquentier was built with AuthenticationManager
 * class for OAuth handling
 */
@LIB_QUENTIER_HAS_AUTHENTICATION_MANAGER_DEFINE@

/**
 * This macro is set to true if libquentier was built with NoteEditor and
 * INoteEditorBackend classes (as well as their implementations)
 */
@LIB_QUENTIER_HAS_NOTE_EDITOR_DEFINE@

/**
 * This macro is set to a string holding the information about
 * the current libquentier build
 */
@LIB_QUENTIER_BUILD_INFO@

/**
 * This macro is set to the major version number of libquentier
 */
@LIB_QUENTIER_VERSION_MAJOR_DEFINE@

/**
 * This macro is set to the minor version of libquentier
 */
@LIB_QUENTIER_VERSION_MINOR_DEFINE@

/**
 * This macro is set to the patch version of libquentier
 */
@LIB_QUENTIER_VERSION_PATCH_DEFINE@

namespace quentier {

/**
 * @return          Major version of libquentier
 */
[[nodiscard]] int QUENTIER_EXPORT libquentierVersionMajor() noexcept;

/**
 * @return          Minor version of libquentier
 */
[[nodiscard]] int QUENTIER_EXPORT libquentierVersionMinor() noexcept;

/**
 * @return          Patch version of libquentier
 */
[[nodiscard]] int QUENTIER_EXPORT libquentierVersionPatch() noexcept;

/**
 * @return          String containing information about
 *                  the current libquentier build
 */
[[nodiscard]] QString QUENTIER_EXPORT libquentierBuildInfo() noexcept;

/**
 * @return          String representing the version of Qt against which
 *                  libquentier was built
 */
[[nodiscard]] QString QUENTIER_EXPORT libquentierBuiltWithQtVersion() noexcept;

/**
 * @return          True if the current build if libquentier has note editor
 *                  included, false otherwise
 */
[[nodiscard]] bool QUENTIER_EXPORT libquentierHasNoteEditor() noexcept;

/**
 * @return          True if the current build of libquentier has authentication
 *                  manager included, false otherwise
 */
[[nodiscard]] bool QUENTIER_EXPORT libquentierHasAuthenticationManager() noexcept;

/**
 * @return          Major version of QEverCloud against which libquentier was
 *                  built
 */
[[nodiscard]] int QUENTIER_EXPORT
libquentierBuiltWithQEverCloudVersionMajor() noexcept;

/**
 * @return          Minor version of QEverCloud against which libquentier was
 *                  built
 */
[[nodiscard]] int QUENTIER_EXPORT
libquentierBuiltWithQEverCloudVersionMinor() noexcept;

/**
 * @return          Patch version of QEverCloud against which libquentier was
 *                  built
 */
[[nodiscard]] int QUENTIER_EXPORT
libquentierBuiltWithQEverCloudVersionPatch() noexcept;

/**
 * @return          Build info of QEverCloud against which libquentier was built
 */
[[nodiscard]] QString QUENTIER_EXPORT
libquentierBuiltWithQEverCloudBuildInfo() noexcept;

} // namespace quentier
